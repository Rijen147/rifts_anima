#r = rotation (0 - north/south facing, 1 - east/west facing)
#lvlup = if you want to have a 50% chance of Rift to level up from size = 1 to size = 2 (true/false)
#loc = location where Rift will spawn (location dependent)
function riftSpawnOnLocat(r: number, lvlup: boolean, loc: location):
	if {_lvlup} is true:
		set {_lvlup.chance} to random integer between 1 and 2
	else:
		set {_lvlup.chance} to 1
	add 1 to {rift.amount}
	add 1 to {rift.id}
	set {_rift.id} to {rift.id}
	spawn armor stand at {_loc}
	add last spawned armor stand to {rift.armorstands::*}
	add last spawned armor stand to {rift.armorstands.check::*}
	set {_armor.stand} to last spawned armor stand
	add nbt from "{Marker:true,Invisible:1,NoGravity:1b}" to nbt of last spawned armor stand
	set {rift.id.%uuid of last spawned armor stand%} to {rift.id}
	set {rift.time.%uuid of {_armor.stand}%} to now
	loop {_lvlup.chance} times:
		if difference between now and {rift.time.%uuid of {_armor.stand}%} is not less than 10 minutes:
			remove 1 from {rift.amount}
			remove {_armor.stand} from {rift.armorstands::*}
			clear {rift.id.%uuid of {_armor.stand}%}
			kill {_armor.stand}
			exit loop
		play sound "minecraft:block.end_portal.spawn" with pitch 1.8 to all players
		if loop-number is 1:
			broadcast "<purple>The other world is passing through <magenta>a rift"
		else if loop-number is 2:
			broadcast "<cyan><bold>The other world is passing through <light blue>a rift"
		if {rift.coordinate.show} is not false:
			set {_randomint} to random integer between 1 and 4
			if {_randomint} is 1:
				if loop-number is 1:
					broadcast "<purple>X: %x-coordinate of {_loc}% Y: %y-coordinate of {_loc}% Z: %z-coordinate of {_loc}%"
				else if loop-number is 2:
					broadcast "<light blue>X: %x-coordinate of {_loc}% Y: <obfuscated>%y-coordinate of {_loc}%<r><light blue> Z: %z-coordinate of {_loc}%"
			else if {_randomint} is 2:
				if loop-number is 1:
					broadcast "<purple>X: <obfuscated>%x-coordinate of {_loc}%<r><purple> Y: %y-coordinate of {_loc}% Z: %z-coordinate of {_loc}%"
				else if loop-number is 2:
					broadcast "<light blue>X: %x-coordinate of {_loc}% Y: <obfuscated>%y-coordinate of {_loc}%<r><light blue> Z: %z-coordinate of {_loc}%"
			else if {_randomint} is 3:
				if loop-number is 1:
					broadcast "<purple>X: %x-coordinate of {_loc}% Y: <obfuscated>%y-coordinate of {_loc}%<r><purple> Z: %z-coordinate of {_loc}%"
				else if loop-number is 2:
					broadcast "<light blue>X: %x-coordinate of {_loc}% Y: <obfuscated>%y-coordinate of {_loc}%<r><light blue> Z: %z-coordinate of {_loc}%"
			else if {_randomint} is 4:
				if loop-number is 1:
					broadcast "<purple>X: %x-coordinate of {_loc}% Y: %y-coordinate of {_loc}% Z: <obfuscated>%z-coordinate of {_loc}%"
				else if loop-number is 2:
					broadcast "<light blue>X: %x-coordinate of {_loc}% Y: %y-coordinate of {_loc}% Z: <obfuscated>%z-coordinate of {_loc}%"
		set {_phase} to 1
		while difference between now and {rift.time.%uuid of {_armor.stand}%} is less than 10 minutes:
			if {_phase} is 1:
				if {_phase1.spawned} is true:
					if size of {rift.phase1.pool.%{_rift.id}%::*} is 0:
						set {_phase} to 2
					else:
						loop {rift.phase1.pool.%{_rift.id}%::*}:
							if {rift.phase1.pool.%{_rift.id}%::%loop-index%} is dead:
								remove {rift.phase1.pool.%{_rift.id}%::%loop-index%} from {rift.phase1.pool.%{_rift.id}%::*}
							if {rift.phase1.pool.%{_rift.id}%::%loop-index%} is not in world "world":
								kill {rift.phase1.pool.%{_rift.id}%::%loop-index%}
								remove {rift.phase1.pool.%{_rift.id}%::%loop-index%} from {rift.phase1.pool.%{_rift.id}%::*}
							#if difference between now and {rift.time.%uuid of {_armor.stand}%} is not less than 10 minutes:
							#	reset nbt of {rift.phase1.pool.%{_rift.id}%::%loop-index%}
				else:
					riftPool(1, {_loc}, {_rift.id}, loop-number-1)
					set {_phase1.spawned} to true
				riftAnimation(loop-number-1, 1, {_r}, {_loc})
				wait 1 tick
			else if {_phase} is 2:
				if {_phase2.spawned} is true:
					if size of {rift.phase2.pool.%{_rift.id}%::*} is 0:
						set {_phase} to 3
					else:
						loop {rift.phase2.pool.%{_rift.id}%::*}:
							if {rift.phase2.pool.%{_rift.id}%::%loop-index%} is dead:
								remove {rift.phase2.pool.%{_rift.id}%::%loop-index%} from {rift.phase2.pool.%{_rift.id}%::*}
							if {rift.phase2.pool.%{_rift.id}%::%loop-index%} is not in world "world":
								kill {rift.phase2.pool.%{_rift.id}%::%loop-index%}
								remove {rift.phase2.pool.%{_rift.id}%::%loop-index%} from {rift.phase2.pool.%{_rift.id}%::*}
							#if difference between now and {rift.time.%uuid of {_armor.stand}%} is not less than 10 minutes:
							#	reset nbt of {rift.phase2.pool.%{_rift.id}%::%loop-index%}
				else:
					riftPool(2, {_loc}, {_rift.id}, loop-number-1)
					set {_phase2.spawned} to true
				riftAnimation(loop-number-1, 2, {_r}, {_loc})
				wait 1 tick
			else if {_phase} is 3:
				if {_phase3.spawned} is true:
					if size of {rift.phase3.pool.%{_rift.id}%::*} is 0:
						set {_phase} to 4
					else:
						loop {rift.phase3.pool.%{_rift.id}%::*}:
							if {rift.phase3.pool.%{_rift.id}%::%loop-index%} is dead:
								remove {rift.phase3.pool.%{_rift.id}%::%loop-index%} from {rift.phase3.pool.%{_rift.id}%::*}
							if {rift.phase3.pool.%{_rift.id}%::%loop-index%} is not in world "world":
								kill {rift.phase3.pool.%{_rift.id}%::%loop-index%}
								remove {rift.phase3.pool.%{_rift.id}%::%loop-index%} from {rift.phase3.pool.%{_rift.id}%::*}
							#if difference between now and {rift.time.%uuid of {_armor.stand}%} is not less than 10 minutes:
							#	reset nbt of {rift.phase3.pool.%{_rift.id}%::%loop-index%}
				else:
					riftPool(3, {_loc}, {_rift.id}, loop-number-1)
					set {_phase3.spawned} to true
				riftAnimation(loop-number-1, 3, {_r}, {_loc})
				wait 1 tick
			else if {_phase} is 4:
				if {_lvlup.chance} is 1:
					apply darkness to all players in radius 10 of {_loc} for 10 seconds
					riftAnimation(loop-number-1, 4, {_r}, {_loc})
					broadcast "<purple>Rift on coordinates X: %x-coordinate of {_loc}% Y: %y-coordinate of {_loc}% Z: %z-coordinate of {_loc}% is closed."
				else if {_lvlup.chance} is 2:
					if loop-number-1 is 1:
						riftAnimation(loop-number-1, 5, {_r}, {_loc})
						if {rift.coordinate.show} is false:
							broadcast "<purple>Rift on coordinates.."
						else:
							broadcast "<purple>Rift.."
						clear {_phase1.spawned}
						clear {_phase2.spawned}
						clear {_phase3.spawned}
						wait 5 second
						broadcast "<cyan>..is opening with a renewed force!"
						wait 6 seconds
					else if loop-number-1 is 2:
						riftAnimation(loop-number-1, 4, {_r}, {_loc})
						broadcast "<cyan>Rift on coordinates X: %x-coordinate of {_loc}% Y: %y-coordinate of {_loc}% Z: %z-coordinate of {_loc}% is closed."
						apply darkness to all players in radius 15 of {_loc} for 10 seconds
				exit 1 loop
			wait 25 ticks
	remove 1 from {rift.amount}
	remove {_armor.stand} from {rift.armorstands::*}
	clear {rift.id.%uuid of {_armor.stand}%}
	kill {_armor.stand}
